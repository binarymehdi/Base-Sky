{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "defaultValue": "dnsproxy",
      "metadata": {
        "description": "Name of the Virtual Machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "forwardIP": {
      "type": "string",
      "defaultValue": "168.63.129.16",
      "metadata": {
        "description": "This is the IP address to forward DNS queries to. The default value represents Azure's internal DNS recursive resolvers."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": ["sshPublicKey", "password"],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Virtual machine size"
      },
      "defaultValue": "Standard_A1_v2"
    },
    "vnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address space prefix of the virtual network"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network where the VM should be created"
      }
    },
    "subnet1Name": {
      "type": "string",
      "metadata": {
        "description": "The name of the subnet where the VM should be created"
      }
    },
    "setupUri": {
      "type": "string",
      "metadata": {
        "description": "The Uri of the dnsproxy-setup.sh file which configures the DNS"
      }
    }
  },
  "variables": {
    "ubuntuOSVersion": "18.04-LTS",
    "asetName": "dnsproxy-avail",
    "nsgName": "dnsproxy-nsg",
    "storType": "Standard_LRS",
    "location": "[parameters('location')]",
    "nicName": "[concat(parameters('vmName'), '-', 'nic')]",
    "scriptUrl": "[parameters('setupUri')]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "comments": "availability set for creating a HA cluster, run the template multiple times to get multiple DNS servers",
      "name": "[variables('asetName')]",
      "apiVersion": "2019-12-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Aligned"
      },
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "comments": "An NSG to prevent inbound traffic other than SSH, set sourceAddressPrefix to restrict access further or block all together (or remove the public ip) and ssh in from another vm",
      "name": "[variables('nsgName')]",
      "apiVersion": "2020-05-01",
      "location": "[variables('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_ssh_in",
            "properties": {
              "description": "The only thing allowed is SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "comments": "A single network interface on each DNS server",
      "name": "[variables('nicName')]",
      "apiVersion": "2020-05-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups/', variables('nsgName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnet1Name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "comments": "A stock Ubuntu server, a VM extension will add the DNS server to it later",
      "name": "[parameters('vmName')]",
      "apiVersion": "2019-12-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[resourceId('Microsoft.Compute/availabilitySets/', variables('asetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('asetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "comments": "The shell script to install Bind9 and setup the ACL and forwarders.  If this step fails, check the logs in /var/log/waagent.log and /var/log/azure/* for details",
      "name": "[concat(parameters('vmName'),'/setupdnsfirewall')]",
      "apiVersion": "2019-12-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": ["[variables('scriptUrl')]"],
          "commandToExecute": "[concat('sh forwarderSetup.sh',' ',parameters('forwardIP'),' ', parameters('vnetAddressPrefix'))]"
        }
      }
    }
  ]
}
